{"ast":null,"code":"var _jsxFileName = \"/home/grdy/Geordi/grdy/react/pro1/todomachine/src/components/TodoSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoSearch() {\n  _s();\n\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const onSearchValueChange = event => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return [/*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"TodoSearch\",\n    placeholder: \"Hola\",\n    type: \"text\",\n    value: searchValue,\n    onChange: onSearchValueChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: searchValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this)];\n}\n\n_s(TodoSearch, \"HM3Ln43XRFR/2uR77U2yFU1TAX4=\");\n\n_c = TodoSearch;\nexport { TodoSearch };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoSearch\");","map":{"version":3,"sources":["/home/grdy/Geordi/grdy/react/pro1/todomachine/src/components/TodoSearch.js"],"names":["React","TodoSearch","searchValue","setSearchValue","useState","onSearchValueChange","event","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAP,IAAAA,cAAc,CAACG,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAd;AACD,GAHD;;AAKA,SAAO,cACH;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,WAAW,EAAC,MAA1C;AAAiD,IAAA,IAAI,EAAC,MAAtD;AACO,IAAA,KAAK,EAAER,WADd;AAEO,IAAA,QAAQ,EAAEG;AAFjB;AAAA;AAAA;AAAA;AAAA,UADG,eAKL;AAAA,cAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,UALK,CAAP;AAOH;;GAfQD,U;;KAAAA,U;AAiBT,SAASA,UAAT","sourcesContent":["import React from \"react\";\nimport '../styles.css';\n\nfunction TodoSearch() {\n    const [searchValue, setSearchValue] = React.useState('');\n\n    const onSearchValueChange = (event) => {\n      console.log(event.target.value);\n      setSearchValue(event.target.value);\n    };\n\n    return [\n        <input className=\"TodoSearch\" placeholder=\"Hola\" type=\"text\"\n               value={searchValue}\n               onChange={onSearchValueChange}\n        />,\n      <p>{searchValue}</p>\n    ];\n}\n\nexport { TodoSearch };\n"]},"metadata":{},"sourceType":"module"}