{"ast":null,"code":"var _jsxFileName = \"/home/grdy/Geordi/grdy/react/pro1/todomachine/src/components/TodoSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport '../styles.css';\nimport { TodoContext } from \"./TodoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoSearch() {\n  _s();\n\n  const {\n    searchValue,\n    setSearchValue\n  } = React.useContext(TodoContext);\n\n  const onSearchValueChange = event => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"TodoSearch\",\n    placeholder: \"Hola\",\n    type: \"text\",\n    value: searchValue,\n    onChange: onSearchValueChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoSearch, \"9unRetbzABklbmBvjZKO3Bu0x6I=\");\n\n_c = TodoSearch;\nexport { TodoSearch };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoSearch\");","map":{"version":3,"sources":["/home/grdy/Geordi/grdy/react/pro1/todomachine/src/components/TodoSearch.js"],"names":["React","TodoContext","TodoSearch","searchValue","setSearchValue","useContext","onSearchValueChange","event","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAAQC,WAAR,QAA0B,eAA1B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCJ,KAAK,CAACK,UAAN,CAAiBJ,WAAjB,CAAxC;;AAEE,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAP,IAAAA,cAAc,CAACG,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAd;AACD,GAHD;;AAKA,sBACI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,WAAW,EAAC,MAA1C;AAAiD,IAAA,IAAI,EAAC,MAAtD;AACO,IAAA,KAAK,EAAER,WADd;AAEO,IAAA,QAAQ,EAAEG;AAFjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAfQJ,U;;KAAAA,U;AAiBT,SAASA,UAAT","sourcesContent":["import React from \"react\";\nimport '../styles.css';\nimport {TodoContext} from \"./TodoContext\";\n\nfunction TodoSearch() {\n\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\n\n    const onSearchValueChange = (event) => {\n      console.log(event.target.value);\n      setSearchValue(event.target.value);\n    };\n\n    return (\n        <input className=\"TodoSearch\" placeholder=\"Hola\" type=\"text\"\n               value={searchValue}\n               onChange={onSearchValueChange}\n        />\n    );\n}\n\nexport { TodoSearch };\n"]},"metadata":{},"sourceType":"module"}