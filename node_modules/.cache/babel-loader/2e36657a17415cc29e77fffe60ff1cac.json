{"ast":null,"code":"var _jsxFileName = \"/home/grdy/Geordi/grdy/react/pro1/todomachine/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//import './App.css';\nimport React from 'react';\nimport { TodoCounter } from './components/TodoCounter.js';\nimport { TodoSearch } from './components/TodoSearch.js';\nimport { TodoList } from './components/TodoList.js';\nimport { TodoItem } from './components/TodoItem.js';\nimport { CreateTodoButtom } from './components/CreateTodoButtom.js';\n/*const defaultTodos = [\n    {text: 'Hablar con Ana', completed: true},\n    {text: 'Regañar a Ana', completed: true},\n    {text: 'Nalguear a Ana', completed: false},\n    {text: 'coger con Ana', completed: false},\n    {text: 'dormir', completed: true}\n];*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useLocalStorage(itemName) {\n  _s();\n\n  const localStorageItem = localStorage.getItem('itemName');\n  let parsedItem;\n\n  if (!localStorageItem) {\n    localStorage.setItem('itemName', JSON.stringify([]));\n    parsedItem = [];\n  } else {\n    parsedItem = JSON.parse(localStorageItem);\n  }\n\n  const [item, setTodos] = React.useState(parsedTodos);\n\n  const saveTodos = newTodos => {\n    const stringifiedTodos = JSON.stringify(newTodos);\n    localStorage.setItem('itemName', stringifiedTodos);\n    setTodos(newTodos);\n  };\n}\n\n_s(useLocalStorage, \"ZwhmLBLNqPbWNAVWvNqd37JcnAw=\");\n\nfunction App() {\n  _s2();\n\n  const [todos, saveTodos] = useLocalStorage('TODOS');\n  const [searchValue, setSearchValue] = React.useState('');\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos); // todos[todoIndex] = {\n    //  text: todos[todoIndex].text,\n    //  completed: true,\n    // }\n  };\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n      total: totalTodos,\n      completed: completedTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => completeTodo(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButtom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"EYsrDwfpGttiZWPU2ClZtw5M6YA=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/grdy/Geordi/grdy/react/pro1/todomachine/src/App.js"],"names":["React","TodoCounter","TodoSearch","TodoList","TodoItem","CreateTodoButtom","useLocalStorage","itemName","localStorageItem","localStorage","getItem","parsedItem","setItem","JSON","stringify","parse","item","setTodos","useState","parsedTodos","saveTodos","newTodos","stringifiedTodos","App","todos","searchValue","setSearchValue","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","completeTodo","todoIndex","findIndex","deleteTodo","splice","map"],"mappings":"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","sourcesContent":["//import './App.css';\nimport React from 'react';\nimport { TodoCounter } from './components/TodoCounter.js';\nimport { TodoSearch } from './components/TodoSearch.js';\nimport { TodoList } from './components/TodoList.js';\nimport { TodoItem } from './components/TodoItem.js';\nimport { CreateTodoButtom } from './components/CreateTodoButtom.js';\n\n/*const defaultTodos = [\n    {text: 'Hablar con Ana', completed: true},\n    {text: 'Regañar a Ana', completed: true},\n    {text: 'Nalguear a Ana', completed: false},\n    {text: 'coger con Ana', completed: false},\n    {text: 'dormir', completed: true}\n];*/\n\nfunction useLocalStorage(itemName) {\n  const localStorageItem = localStorage.getItem('itemName');\n  let parsedItem;\n\n  if (!localStorageItem) {\n    localStorage.setItem('itemName', JSON.stringify([]));\n    parsedItem = [];\n  } else {\n    parsedItem = JSON.parse(localStorageItem);\n  }\n\n  const [item, setTodos] = React.useState(parsedTodos);\n\n  const saveTodos = (newTodos) => {\n    const stringifiedTodos = JSON.stringify(newTodos);\n    localStorage.setItem('itemName', stringifiedTodos);\n    setTodos(newTodos);\n  }\n}\n\nfunction App() {\n  const [todos, saveTodos] = useLocalStorage('TODOS')\n\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    })\n  }\n\n\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n    // todos[todoIndex] = {\n    //  text: todos[todoIndex].text,\n    //  completed: true,\n    // }\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return (\n    <React.Fragment>\n      <TodoCounter\n        total={totalTodos}\n        completed={completedTodos}\n      />\n      <TodoSearch\n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n      />\n      <TodoList>\n        {searchedTodos.map(todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n      <CreateTodoButtom/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}